// const express = require('express');
// const app = express();
// const router = express.Router();
// const bodyparser = require('body-parser');
// const cors = require('cors') //requies ini dikirimkan dari domain yang berbeda
// const sequelize = require("./util/database")

// const adminRoutes = require("./routes/admin") //admin routes berada di folder routes/admin
// const shopRoutes = require("./routes/shop")
// //req metod ada bberepa tipe 
// //get : ngambil data
// //post :kirim data re
// //put : update data req
// //delete : delete data



// console.log('start express node server....')


// //gunakan setelah di import
// app.use(bodyparser.urlencoded({extended:false}))
// app.use(cors())
// app.use('/admin',adminRoutes)//segala sesuatu yang dihandle ./admin akan dihandle oleh adminRoutes
// app.use('/shop',shopRoutes)


// //ini dijalankan karena general
// router.post((req, res, next) => {
//     console.log("middle 1:", Date.now())
//     next()//next akan melanjutkan middleware yang cocok
// })


// router.use("/user/:id", function(req, res, next){
//     console.log("middle user", req.params.id)
//     next()//melanjutkan dari atas sampai ada /user/id yg cocok
// })


// router.get("/user/:id", function(req, res){
//     res.send(req.method+"-"+req.params.id)
// })//berhenti disni karena sudah tidak ada next

// router.get("/print", function(req, res){
//     res.send(req.method+"-"+req.query.text+"-"+req.query.name)
// })

// app.use("/", router);


// app.use((req, res, next) => {
//     res.status(404).send("<h1>Halaman Tidak Ditemukan</h1>")
// })

// const koneksi = async () => {
//     try {
//         await sequelize.authenticate()
//         console.log("database terhubung....")
//     } catch (error){
//         console.log("error koneksi database",error)
//     }


// }

// // koneksi();

// sequelize.sync()
// .then (result =>{
//     console.log(result);
//     app.listen(8000);
// })
// .catch ( err => {
//     console.log(err);
// })


// app.listen(8000);





//TUGAS BACKEND 1

//BACKEND SEQUILIZE 

const express = require('express');
const app = express();
const router = express.Router();
const bodyparser = require('body-parser');
const cors = require('cors')
const sequelize = require('./util/database')

const adminRoutes = require("./routes/admin")
const shopRoutes = require("./routes/shop");
const adminPostRoutes = require("./routes/add-post");
const Product = require("./models/products");
const User = require("./models/user");
const Cart = require("./models/cart");
const CartItem = require("./models/cartitem");

//gunakan setelah di import
app.use(bodyparser.urlencoded({extended:false}))
app.use(cors())
app.use('/admin',adminRoutes)//segala sesuatu yang dihandle ./admin akan dihandle oleh adminRoutes
app.use('/shop',shopRoutes);
app.use('/add-post',adminPostRoutes)


console.log('start express node berhasil cui....');




//middle ware yang dijalan ketika resfresh '/'
// app.use((req, res, next) => {
//     console.log('Time: ' + Date.now())
//     next();
// })

//TUGAS NOMOR 2 . 1
//routes utama kita di GET
app.get('/',(req,res,next)=>{
    console.log('new request');
    res.send("<h1>INI HALAMAN NEW REQUEST</h1>")
    next();
});



//TUGAS NOMOR 2 . 2
//(harus menggunakan app.post untuk bisa diakses di /about)
app.get('/about',(req,res,next)=>{
    console.log("processsing request");
    // untuk bisa membaca html
    res.send('<h1>PROCESSING REQUEST</h1>');
    next();
});

//TUGAS NOMOR 3.1
app.get('/',(req,res,next)=>{
    console.log('DUMMY RESPONSE CUK');
    next();
});

app.get('/post/:param',(req,res,next)=>{
    console.log('DUMMY RESPONSE PARAM RESPONSE');
    res.send("<h1>DUMMY RESPOND FOR /POST/:PARAM</h1>")
    next();
});

//TUGAS NOMOR 5.1
app.get('/print',(req,res,next)=>{
    //TENTUKAN DATA YANG DIAMBIL AKAN BERUPA TEXT DI QUERY (BROWSER)
    const text=req.query.text;
    console.log(text);
    
    res.send(`<h1>TEXT PRINTED SUCCESFULY </h1><h2 style="color:orange">${text}</h2`)
    next();
});
//tugas nomor 5.2
app.get('/add',(req,res,next)=>{
    //TENTUKAN DATA YANG DIAMBIL AKAN BERUPA TEXT DI QUERY (BROWSER)
    const {a, b} = req.query
    
    const numA = parseInt(a)
    const numB = parseInt(b)
    
    const hasil = numA + numB
    res.send(`<h1>ini adalah hasil dari ${numA}+ ${numB}</h1><h1 style='color: orange; text-align: center'>${hasil}</h1>`)
    console.log(`hasil dari ${numA} + ${numB} adalah:  ${hasil}`);
    next();
});




//FUNGSINY UNTUK MENAMPILKAN HALAMAN PAGE YANG BELUM DITENTUKAN ALIAS 404(PAGE NOT FOUND)
//sellu letakkan paling akhir
app.use((req, res, next) => {
    res.status(404)
    res.send("<h1>HALAMAN GA ADA CUK</h1>")
});


// router.post((req, res, next) => {
//     console.log("middle 1:", Date.now())
//     next()//next akan melanjutkan middleware yang cocok
// })

app.listen(8000);